<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dyx.mapper.dsno1.system.FilelibMapper">

	<!--表名 -->
	<sql id="tableName">
		SYS_FILELIB
	</sql>

	<!--数据字典表名 -->
	<sql id="dicTableName">
		SYS_DICTIONARIES
	</sql>

	<!-- 字段 -->
	<sql id="Field">
		f.FILENAME,
		f.BIZID,
		f.BIZTYPE,
		f.FILE,
		f.CREATETIME,
		f.FILELIB_ID,
		f.ORIGNAME,
		f.BIZNAME,
		f.FILEPATH,
		f.FILETYPE,
		f.RJDX,
        f.STATE
	</sql>

	<!-- 字段用于新增 -->
	<sql id="Field2">
		FILENAME,
		BIZID,
		BIZTYPE,
		FILE,
		CREATETIME,
		FILELIB_ID,
		ORIGNAME,
		BIZNAME,
		FILEPATH,
		FILETYPE,
		RJDX,
        STATE
	</sql>

	<!-- 字段值 -->
	<sql id="FieldValue">
		#{FILENAME},
		#{BIZID},
		#{BIZTYPE},
		#{FILE,jdbcType=BLOB},
		#{CREATETIME},
		#{FILELIB_ID},
		#{ORIGNAME},
		#{BIZNAME},
		#{FILEPATH},
		#{FILETYPE},
		#{RJDX},
        #{STATE}
	</sql>

	<!-- 新增-->
	<insert id="save" parameterType="pd">
		insert into
	<include refid="tableName"></include>
		(
	<include refid="Field2"></include>
		) values (
	<include refid="FieldValue"></include>
		)
	</insert>

	<!-- 删除-->
	<delete id="delete" parameterType="pd">
		delete from
		<include refid="tableName"></include>
		where
			FILELIB_ID = #{FILELIB_ID} or FILENAME = #{FILENAME}
	</delete>

	<!-- 修改 -->
	<update id="edit" parameterType="pd">
		update
		<include refid="tableName"></include>
		set
			FILENAME = #{FILENAME},
			BIZID = #{BIZID},
			BIZTYPE = #{BIZTYPE},
			FILE = #{FILE},
			CREATETIME = #{CREATETIME},
		    ORIGNAME = #{ORIGNAME},
            BIZNAME = #{BIZNAME},
            FILEPATH =#{FILEPATH},
            FILETYPE =#{FILETYPE},
            RJDX =#{RJDX},
            STATE =#{STATE}
		where
			FILELIB_ID = #{FILELIB_ID}
	</update>

	<!-- 通过ID获取数据 -->
	<select id="findById" parameterType="pd" resultType="pd">
		select
		<include refid="Field"></include>
		from
		<include refid="tableName"></include> f
		where
			f.FILELIB_ID = #{FILELIB_ID} OR f.FILENAME = #{FILENAME}
	</select>

	<!-- 通过bizID获取数据 -->
	<select id="findByBizId" parameterType="pd" resultType="pd">
		select
		<include refid="Field"></include>
		from
		<include refid="tableName"></include> f
		where
		f.BIZID = #{bizid}
	</select>

	<!-- 列表 -->
	<select id="datalistPage" parameterType="page" resultType="pd">
		select
		<include refid="Field"></include>
		from
		<include refid="tableName"></include> f
		where 1=1
		<if test="pd.keyWords != null and pd.keyWords != ''"><!-- 关键词检索 -->
			and
				(
				<!--	根据需求自己加检索条件
					字段1 LIKE CONCAT(CONCAT('%', #{pd.keyWords}),'%')
					 or
					字段2 LIKE CONCAT(CONCAT('%', #{pd.keyWords}),'%')
				-->
				)
		</if>
	</select>

	<!-- 根据条件查询 -->
	<select id="listAll" parameterType="pd" resultType="pd">
		select
		<include refid="Field"></include>
		from
		<include refid="tableName"></include> f
		where 1=1
		<if test="BIZID != null and BIZID != ''">
			and BIZID = #{BIZID}
		</if>
		<if test="BIZTYPE != null and BIZTYPE != ''">
			and BIZTYPE = #{BIZTYPE}
		</if>
		<if test="FILENAME != null and FILENAME != ''">
			and FILENAME = #{FILENAME}
		</if>
		<if test="BIZNAME != null and BIZNAME != ''">
			and BIZNAME = #{BIZNAME}
		</if>
        <if test="FILETYPE != null and FILETYPE != ''">
            and FILETYPE = #{FILETYPE}
        </if>
	</select>

    <!-- 根据业务查询无关联文件 -->
    <select id="listNonBiz" parameterType="pd" resultType="pd">
        select
        <include refid="Field"></include>
        from
        <include refid="tableName"></include> f
        WHERE NOT EXISTS
            (SELECT * FROM  #{BIZNAME} c WHERE c.#{BIZID} = f.BIZID )
    </select>

    <!--根据业务id查询-->
    <select id="listByIds" parameterType="String" resultType="pd">
        select
        <include refid="Field"></include>
        from
        <include refid="tableName"></include> f
        where 1=1 and
        BIZID in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

	<!-- 批量删除 -->
	<delete id="deleteAll" parameterType="String">
		delete from
		<include refid="tableName"></include>
		where
			FILELIB_ID in
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                 #{item}
		</foreach>
	</delete>
	<!-- 批量插入-->
	<insert id="insertBatch" parameterType="java.util.List">
		replace into
		<include refid="tableName"></include>
		(
		<include refid="Field2"></include>
		) values
		<foreach collection="list" item="item" index="index" separator=",">
			(
			#{item.FILENAME},
			#{item.BIZID},
			#{item.BIZTYPE},
			#{item.FILE,jdbcType=BLOB},
			#{item.CREATETIME},
			#{item.FILELIB_ID},
			#{item.ORIGNAME},
			#{item.BIZNAME},
			#{item.FILEPATH},
			#{item.FILETYPE},
			#{item.RJDX},
			#{item.STATE}
			)
		</foreach>
	</insert>
	<!-- fh313596790qq(青苔) -->
</mapper>